import vapoursynth as vs
from . import types
from typing import Optional, Tuple, TypeVar, Union

R = TypeVar('R')
T = TypeVar('T')

def get_depth(clip: vs.VideoNode) -> int: ...
def get_plane_size(frame: Union[vs.VideoFrame, vs.VideoNode], planeno: int) -> Tuple[int, int]: ...
def get_subsampling(clip: vs.VideoNode) -> Union[None, str]: ...
def get_w(height: int, aspect_ratio: float = ..., *, only_even: bool = ...) -> int: ...
def is_image(filename: str) -> bool: ...
def scale_value(value: Union[int, float], input_depth: int, output_depth: int, range_in: Union[int, types.Range] = ..., range: Optional[Union[int, types.Range]] = ..., scale_offsets: bool = ..., chroma: bool = ...) -> Union[int, float]: ...
