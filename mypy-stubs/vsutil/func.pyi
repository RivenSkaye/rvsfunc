from typing import Callable, Optional, TypeVar, Union

F = TypeVar('F', bound=Callable)
T = TypeVar('T')
R = TypeVar('R')

def disallow_variable_format(function: F) -> F: ...
def disallow_variable_resolution(function: F) -> F: ...
def fallback(value: Optional[T], fallback_value: T) -> T: ...
def iterate(base: T, function: Callable[[Union[T, R]], R], count: int) -> Union[T, R]: ...
